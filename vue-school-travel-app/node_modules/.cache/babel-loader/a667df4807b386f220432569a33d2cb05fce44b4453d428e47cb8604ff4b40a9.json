{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, computed } from \"vue\";\nimport axios from \"axios\";\nimport { useRouter } from \"vue-router\";\nexport default {\n  __name: 'LoginView',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const username = ref(\"\");\n    const password = ref(\"\");\n    const router = useRouter(); // 用于路由跳转\n    const token = ref(\"\");\n    const identity = ref(false);\n    const selected1 = computed(() => {\n      if (!identity.value) {\n        return {\n          \"background-color\": \"#4caf50\",\n          color: \"white\"\n        };\n      } else {\n        return {\n          \"background-color\": \"white\",\n          color: \"black\"\n        };\n      }\n    });\n    const selected2 = computed(() => {\n      if (!identity.value) {\n        return {\n          \"background-color\": \"white\",\n          color: \"black\"\n        };\n      } else {\n        return {\n          \"background-color\": \"#4caf50\",\n          color: \"white\"\n        };\n      }\n    });\n    const path = computed(() => identity.value ? \"/api/admin/index/login\" : \"/api/index/login\");\n    const handlelogin = async () => {\n      try {\n        // 请求后端\n        const response = await axios.post(`${path.value}`, {\n          userName: username.value,\n          password: password.value\n        });\n\n        // 处理响应状态码\n        switch (response.data.code) {\n          case 200:\n            alert(\"登录成功！\");\n            token.value = response.data.data.token;\n\n            // 保存 token 到 localStorage\n            localStorage.setItem(\"token\", token.value);\n\n            // 跳转到主页或其他页面\n            router.push(\"/emoji\");\n            break;\n          case 201:\n            alert(\"用户名或密码错误，请检查后重试！\");\n            break;\n          case 202:\n            alert(\"验证码错误，请重新输入！\");\n            break;\n          case 208:\n            alert(\"用户未登录或未授权，请先登录！\");\n            break;\n          default:\n            alert(\"未知错误，请稍后再试！\");\n        }\n      } catch (error) {\n        // 处理请求错误\n        if (error.response) {\n          alert(\"服务器错误，请稍后重试！\");\n        } else {\n          alert(\"网络错误，请检查网络连接！\");\n        }\n      }\n    };\n    const __returned__ = {\n      username,\n      password,\n      router,\n      token,\n      identity,\n      selected1,\n      selected2,\n      path,\n      handlelogin,\n      ref,\n      computed,\n      get axios() {\n        return axios;\n      },\n      get useRouter() {\n        return useRouter;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","axios","useRouter","username","password","router","token","identity","selected1","value","color","selected2","path","handlelogin","response","post","userName","data","code","alert","localStorage","setItem","push","error"],"sources":["D:/_xhf/java/html_css_javascript/vue/vuerouter/vue-school-travel-app/src/views/LoginView.vue"],"sourcesContent":["<template>\n  <div class=\"login\">\n    <router-link to=\"/\"><button>主页</button></router-link>\n    <router-link to=\"/register\"><button>注册</button></router-link>\n  </div>\n  <div class=\"login-page\">\n    <div class=\"header\">\n      <h1>登录</h1>\n    </div>\n    <div class=\"main\">\n      <button @click=\"identity = false\" :style=\"selected1\">用户</button>\n      <button @click=\"identity = true\" :style=\"selected2\">管理</button>\n      <form @submit.prevent=\"handlelogin\">\n        <span>\n          <i class=\"fa-solid fa-user\"></i>\n          <input\n            type=\"text\"\n            placeholder=\"用户名\"\n            id=\"username\"\n            v-model=\"username\"\n          />\n        </span>\n        <br />\n        <span><i class=\"fa-solid fa-lock\"></i></span>\n        <input\n          type=\"password\"\n          placeholder=\"密码\"\n          id=\"password\"\n          v-model=\"password\"\n        />\n        <br />\n        <button type=\"submit\">登录</button>\n      </form>\n    </div>\n  </div>\n</template>\n<script setup>\nimport { ref, computed } from \"vue\";\nimport axios from \"axios\";\nimport { useRouter } from \"vue-router\";\n\nconst username = ref(\"\");\nconst password = ref(\"\");\nconst router = useRouter(); // 用于路由跳转\nconst token = ref(\"\");\nconst identity = ref(false);\nconst selected1 = computed(() => {\n  if (!identity.value) {\n    return {\n      \"background-color\": \"#4caf50\",\n      color: \"white\",\n    };\n  } else {\n    return {\n      \"background-color\": \"white\",\n      color: \"black\",\n    };\n  }\n});\nconst selected2 = computed(() => {\n  if (!identity.value) {\n    return {\n      \"background-color\": \"white\",\n      color: \"black\",\n    };\n  } else {\n    return {\n      \"background-color\": \"#4caf50\",\n      color: \"white\",\n    };\n  }\n});\nconst path = computed(() =>\n  identity.value ? \"/api/admin/index/login\" : \"/api/index/login\"\n);\nconst handlelogin = async () => {\n  try {\n    // 请求后端\n    const response = await axios.post(`${path.value}`, {\n      userName: username.value,\n      password: password.value,\n    });\n\n    // 处理响应状态码\n    switch (response.data.code) {\n      case 200:\n        alert(\"登录成功！\");\n        token.value = response.data.data.token;\n\n        // 保存 token 到 localStorage\n        localStorage.setItem(\"token\", token.value);\n\n        // 跳转到主页或其他页面\n        router.push(\"/emoji\");\n        break;\n\n      case 201:\n        alert(\"用户名或密码错误，请检查后重试！\");\n        break;\n\n      case 202:\n        alert(\"验证码错误，请重新输入！\");\n        break;\n\n      case 208:\n        alert(\"用户未登录或未授权，请先登录！\");\n        break;\n\n      default:\n        alert(\"未知错误，请稍后再试！\");\n    }\n  } catch (error) {\n    // 处理请求错误\n    if (error.response) {\n      alert(\"服务器错误，请稍后重试！\");\n    } else {\n      alert(\"网络错误，请检查网络连接！\");\n    }\n  }\n};\n</script>\n<style scoped>\n/* 两个按钮并列放在顶部的最右侧 */\n.login {\n  position: fixed; /* 固定定位 */\n  top: 20px; /* 距离顶部 20px */\n  right: 20px; /* 距离右边 20px */\n  display: flex; /* 使用 Flexbox 对齐 */\n  gap: 15px; /* 按钮之间的间距 */\n}\n\nbutton {\n  padding: 10px 20px; /* 内边距 */\n  background-color: #4caf50; /* 背景色 */\n  color: white; /* 文字颜色 */\n  text-decoration: none; /* 去掉链接下划线 */\n  border-radius: 5px; /* 圆角 */\n  font-size: 16px; /* 字体大小 */\n  transition: background-color 0.3s ease; /* 动画效果 */\n}\n\nbutton:hover {\n  background-color: #45a049; /* 悬停时背景颜色 */\n}\n\n.login-page {\n  width: 380px;\n  margin: 3% auto;\n  border-radius: 25px;\n  background-color: rgba(0, 0, 0, 0.1);\n  box-shadow: 0 0 17px black;\n}\n.header {\n  text-align: center;\n  padding: 20px;\n}\n.header h1 {\n  color: black;\n  font-size: 40px;\n  margin-bottom: 30px;\n}\n.main {\n  text-align: center;\n}\n.main input {\n  width: 300px;\n  height: 40px;\n  margin-bottom: 20px;\n  padding: 0 10px;\n  border: none;\n  outline: none;\n  border-radius: 20px;\n  background-color: white;\n  color: #333;\n  padding-left: 40px;\n  box-sizing: 15px;\n}\n.main input::placeholder {\n  color: #333;\n}\n.main button {\n  width: 80px;\n  height: 50px;\n  border: none;\n  outline: none;\n  border-radius: 10px;\n  background-color: #763030;\n  color: #fff;\n  font-size: 20px;\n  margin: 20px;\n}\ni {\n  position: absolute;\n  margin-left: 10px;\n  margin-top: 10px;\n  color: #333;\n  padding-left: 10px;\n}\n/* 为button增加点击效果 */\nbutton:active {\n  transform: scale(0.98);\n  box-shadow: 3px 2px 22px 1px rgba(0, 0, 0, 0.24);\n}\n/* 增加选中效果 */\n</style>\n"],"mappings":";AAqCA,SAASA,GAAG,EAAEC,QAAQ,QAAQ,KAAK;AACnC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,YAAY;;;;;;;IAEtC,MAAMC,QAAQ,GAAGJ,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMK,QAAQ,GAAGL,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMM,MAAM,GAAGH,SAAS,CAAC,CAAC,CAAC,CAAC;IAC5B,MAAMI,KAAK,GAAGP,GAAG,CAAC,EAAE,CAAC;IACrB,MAAMQ,QAAQ,GAAGR,GAAG,CAAC,KAAK,CAAC;IAC3B,MAAMS,SAAS,GAAGR,QAAQ,CAAC,MAAM;MAC/B,IAAI,CAACO,QAAQ,CAACE,KAAK,EAAE;QACnB,OAAO;UACL,kBAAkB,EAAE,SAAS;UAC7BC,KAAK,EAAE;QACT,CAAC;MACH,CAAC,MAAM;QACL,OAAO;UACL,kBAAkB,EAAE,OAAO;UAC3BA,KAAK,EAAE;QACT,CAAC;MACH;IACF,CAAC,CAAC;IACF,MAAMC,SAAS,GAAGX,QAAQ,CAAC,MAAM;MAC/B,IAAI,CAACO,QAAQ,CAACE,KAAK,EAAE;QACnB,OAAO;UACL,kBAAkB,EAAE,OAAO;UAC3BC,KAAK,EAAE;QACT,CAAC;MACH,CAAC,MAAM;QACL,OAAO;UACL,kBAAkB,EAAE,SAAS;UAC7BA,KAAK,EAAE;QACT,CAAC;MACH;IACF,CAAC,CAAC;IACF,MAAME,IAAI,GAAGZ,QAAQ,CAAC,MACpBO,QAAQ,CAACE,KAAK,GAAG,wBAAwB,GAAG,kBAC9C,CAAC;IACD,MAAMI,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF;QACA,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,IAAI,CAAC,GAAGH,IAAI,CAACH,KAAK,EAAE,EAAE;UACjDO,QAAQ,EAAEb,QAAQ,CAACM,KAAK;UACxBL,QAAQ,EAAEA,QAAQ,CAACK;QACrB,CAAC,CAAC;;QAEF;QACA,QAAQK,QAAQ,CAACG,IAAI,CAACC,IAAI;UACxB,KAAK,GAAG;YACNC,KAAK,CAAC,OAAO,CAAC;YACdb,KAAK,CAACG,KAAK,GAAGK,QAAQ,CAACG,IAAI,CAACA,IAAI,CAACX,KAAK;;YAEtC;YACAc,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEf,KAAK,CAACG,KAAK,CAAC;;YAE1C;YACAJ,MAAM,CAACiB,IAAI,CAAC,QAAQ,CAAC;YACrB;UAEF,KAAK,GAAG;YACNH,KAAK,CAAC,kBAAkB,CAAC;YACzB;UAEF,KAAK,GAAG;YACNA,KAAK,CAAC,cAAc,CAAC;YACrB;UAEF,KAAK,GAAG;YACNA,KAAK,CAAC,iBAAiB,CAAC;YACxB;UAEF;YACEA,KAAK,CAAC,aAAa,CAAC;QACxB;MACF,CAAC,CAAC,OAAOI,KAAK,EAAE;QACd;QACA,IAAIA,KAAK,CAACT,QAAQ,EAAE;UAClBK,KAAK,CAAC,cAAc,CAAC;QACvB,CAAC,MAAM;UACLA,KAAK,CAAC,eAAe,CAAC;QACxB;MACF;IACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}