{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, withModifiers as _withModifiers, Fragment as _Fragment, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"menu-dropdown\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"body\"\n};\nconst _hoisted_3 = {\n  class: \"emoji-container\"\n};\nconst _hoisted_4 = {\n  class: \"emoji-group\"\n};\nconst _hoisted_5 = [\"value\"];\nconst _hoisted_6 = [\"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createCommentVNode(\" 右上角菜单按钮 \"), _createElementVNode(\"div\", {\n    class: \"menu-button\",\n    onClick: $setup.toggleMenu\n  }, \"☰\"), _createCommentVNode(\" 弹出菜单 \"), $setup.isMenuVisible ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"button\", {\n    onClick: $setup.fetchUserInfo\n  }, \"查看用户信息\"), _createElementVNode(\"button\", {\n    onClick: $setup.goToEmojiPage\n  }, \"发送表情\"), _createElementVNode(\"button\", {\n    onClick: $setup.fetchEmojiHistory\n  }, \"查看表情历史\")])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 如果有 token 显示表情选择界面 \"), $setup.hastoken ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [$setup.isEmojiPageVisible ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"form\", {\n    onSubmit: _withModifiers($setup.submitEmoji, [\"prevent\"])\n  }, [_cache[8] || (_cache[8] = _createElementVNode(\"h2\", null, \"你现在的心情如何？\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", {\n    class: _normalizeClass([\"emoji\", {\n      selected: $setup.selectedEmoji === 'confused'\n    }]),\n    onClick: _cache[0] || (_cache[0] = $event => $setup.selectEmoji('confused'))\n  }, \" 😕 \", 2 /* CLASS */), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"emoji\", {\n      selected: $setup.selectedEmoji === 'angry'\n    }]),\n    onClick: _cache[1] || (_cache[1] = $event => $setup.selectEmoji('angry'))\n  }, \" 😡 \", 2 /* CLASS */), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"emoji\", {\n      selected: $setup.selectedEmoji === 'laughing'\n    }]),\n    onClick: _cache[2] || (_cache[2] = $event => $setup.selectEmoji('laughing'))\n  }, \" 😆 \", 2 /* CLASS */), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"emoji\", {\n      selected: $setup.selectedEmoji === 'sleepy'\n    }]),\n    onClick: _cache[3] || (_cache[3] = $event => $setup.selectEmoji('sleepy'))\n  }, \" 😴 \", 2 /* CLASS */), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"emoji\", {\n      selected: $setup.selectedEmoji === 'worried'\n    }]),\n    onClick: _cache[4] || (_cache[4] = $event => $setup.selectEmoji('worried'))\n  }, \" 😨 \", 2 /* CLASS */), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"emoji\", {\n      selected: $setup.selectedEmoji === 'smiling'\n    }]),\n    onClick: _cache[5] || (_cache[5] = $event => $setup.selectEmoji('smiling'))\n  }, \" 🙂 \", 2 /* CLASS */), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"emoji\", {\n      selected: $setup.selectedEmoji === 'disappointed'\n    }]),\n    onClick: _cache[6] || (_cache[6] = $event => $setup.selectEmoji('disappointed'))\n  }, \" 😞 \", 2 /* CLASS */), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"emoji\", {\n      selected: $setup.selectedEmoji === 'smirking'\n    }]),\n    onClick: _cache[7] || (_cache[7] = $event => $setup.selectEmoji('smirking'))\n  }, \" 😏 \", 2 /* CLASS */)]), _createCommentVNode(\" 隐藏字段，用来存储选中的表情 \"), _createElementVNode(\"input\", {\n    type: \"hidden\",\n    id: \"selectedEmoji\",\n    name: \"emoji\",\n    value: $setup.selectedEmoji\n  }, null, 8 /* PROPS */, _hoisted_5), _createCommentVNode(\" 提交按钮 \"), _createElementVNode(\"button\", {\n    type: \"submit\",\n    class: \"submit-btn\",\n    disabled: !$setup.selectedEmoji\n  }, \" 确认提交 \", 8 /* PROPS */, _hoisted_6)], 32 /* NEED_HYDRATION */)])])) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */)) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 2\n  }, [_createCommentVNode(\" 如果没有 token，显示 HomeHeader \"), _createVNode($setup[\"HomeHeader\"]), _cache[9] || (_cache[9] = _createElementVNode(\"div\", {\n    class: \"stress\"\n  }, \"请先注册或登录再使用相关功能\", -1 /* HOISTED */))], 64 /* STABLE_FRAGMENT */))]);\n}","map":{"version":3,"names":["key","class","_createElementBlock","_createCommentVNode","_createElementVNode","onClick","$setup","toggleMenu","isMenuVisible","_hoisted_1","fetchUserInfo","goToEmojiPage","fetchEmojiHistory","hastoken","_Fragment","isEmojiPageVisible","_hoisted_2","_hoisted_3","onSubmit","_withModifiers","submitEmoji","_hoisted_4","_normalizeClass","selected","selectedEmoji","_cache","$event","selectEmoji","type","id","name","value","_hoisted_5","disabled","_hoisted_6","_createVNode"],"sources":["D:\\_xhf\\java\\html_css_javascript\\vue\\vuerouter\\vue-school-travel-app\\src\\views\\EmojiView.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- 右上角菜单按钮 -->\n    <div class=\"menu-button\" @click=\"toggleMenu\">☰</div>\n\n    <!-- 弹出菜单 -->\n    <div v-if=\"isMenuVisible\" class=\"menu-dropdown\">\n      <button @click=\"fetchUserInfo\">查看用户信息</button>\n      <button @click=\"goToEmojiPage\">发送表情</button>\n      <button @click=\"fetchEmojiHistory\">查看表情历史</button>\n    </div>\n\n    <!-- 如果有 token 显示表情选择界面 -->\n    <template v-if=\"hastoken\">\n      <div v-if=\"isEmojiPageVisible\" class=\"body\">\n        <div class=\"emoji-container\">\n          <form @submit.prevent=\"submitEmoji\">\n            <h2>你现在的心情如何？</h2>\n\n            <div class=\"emoji-group\">\n              <div\n                class=\"emoji\"\n                :class=\"{ selected: selectedEmoji === 'confused' }\"\n                @click=\"selectEmoji('confused')\"\n              >\n                😕\n              </div>\n              <div\n                class=\"emoji\"\n                :class=\"{ selected: selectedEmoji === 'angry' }\"\n                @click=\"selectEmoji('angry')\"\n              >\n                😡\n              </div>\n              <div\n                class=\"emoji\"\n                :class=\"{ selected: selectedEmoji === 'laughing' }\"\n                @click=\"selectEmoji('laughing')\"\n              >\n                😆\n              </div>\n              <div\n                class=\"emoji\"\n                :class=\"{ selected: selectedEmoji === 'sleepy' }\"\n                @click=\"selectEmoji('sleepy')\"\n              >\n                😴\n              </div>\n              <div\n                class=\"emoji\"\n                :class=\"{ selected: selectedEmoji === 'worried' }\"\n                @click=\"selectEmoji('worried')\"\n              >\n                😨\n              </div>\n              <div\n                class=\"emoji\"\n                :class=\"{ selected: selectedEmoji === 'smiling' }\"\n                @click=\"selectEmoji('smiling')\"\n              >\n                🙂\n              </div>\n              <div\n                class=\"emoji\"\n                :class=\"{ selected: selectedEmoji === 'disappointed' }\"\n                @click=\"selectEmoji('disappointed')\"\n              >\n                😞\n              </div>\n              <div\n                class=\"emoji\"\n                :class=\"{ selected: selectedEmoji === 'smirking' }\"\n                @click=\"selectEmoji('smirking')\"\n              >\n                😏\n              </div>\n            </div>\n\n            <!-- 隐藏字段，用来存储选中的表情 -->\n            <input\n              type=\"hidden\"\n              id=\"selectedEmoji\"\n              name=\"emoji\"\n              :value=\"selectedEmoji\"\n            />\n\n            <!-- 提交按钮 -->\n            <button type=\"submit\" class=\"submit-btn\" :disabled=\"!selectedEmoji\">\n              确认提交\n            </button>\n          </form>\n        </div>\n      </div>\n    </template>\n\n    <!-- 如果没有 token，显示 HomeHeader -->\n    <template v-else>\n      <HomeHeader />\n      <div class=\"stress\">请先注册或登录再使用相关功能</div>\n    </template>\n  </div>\n</template>\n\n<script setup>\nimport { ref } from \"vue\";\nimport axios from \"axios\";\nimport HomeHeader from \"../components/HomeHeader.vue\";\n\n// 定义响应式变量\nconst hastoken = ref(!!localStorage.getItem(\"token\"));\nconst isMenuVisible = ref(false);\nconst isEmojiPageVisible = ref(false);\nconst selectedEmoji = ref(\"\");\n\n// 控制菜单的显示与隐藏\nconst toggleMenu = () => {\n  isMenuVisible.value = !isMenuVisible.value;\n};\n\n// 选择表情的函数\nfunction selectEmoji(emoji) {\n  selectedEmoji.value = emoji; // 设置选中的表情\n}\n\n// 提交表情的函数\nconst submitEmoji = async () => {\n  if (!selectedEmoji.value) return;\n\n  const token = localStorage.getItem(\"token\");\n  try {\n    const response = await axios.post(\n      \"/emoji/post\",\n      { emojiCode: selectedEmoji.value },\n      {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      }\n    );\n    if (response.data.code === 200) {\n      alert(\"表情发送成功\");\n    } else {\n      alert(\"表情发送失败\");\n    }\n  } catch (error) {\n    alert(\"请求失败，请稍后重试\");\n  }\n};\n\n// 查看用户信息\nconst fetchUserInfo = async () => {\n  const token = localStorage.getItem(\"token\");\n  try {\n    const response = await axios.get(\"/user/info/get\", {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    if (response.data.code === 200) {\n      alert(`用户信息：${JSON.stringify(response.data.data)}`);\n    } else {\n      alert(\"获取用户信息失败\");\n    }\n  } catch (error) {\n    alert(\"请求失败，请稍后重试\");\n  }\n};\n\n// 查看表情历史\nconst fetchEmojiHistory = async () => {\n  const token = localStorage.getItem(\"token\");\n  try {\n    const response = await axios.get(\"/emoji/findByPage/1/10\", {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    if (response.data.code === 200) {\n      console.log(\"表情历史：\", response.data.data);\n    } else {\n      alert(\"获取表情历史失败\");\n    }\n  } catch (error) {\n    alert(\"请求失败，请稍后重试\");\n  }\n};\n\n// 跳转到表情页面\nconst goToEmojiPage = () => {\n  isEmojiPageVisible.value = true;\n};\n</script>\n\n<style scoped>\n.stress {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  font-size: 24px;\n  color: red;\n}\n\n.menu-button {\n  position: fixed;\n  top: 20px;\n  right: 20px;\n  font-size: 24px;\n  cursor: pointer;\n}\n\n.menu-dropdown {\n  position: fixed;\n  top: 60px;\n  right: 20px;\n  background-color: white;\n  border-radius: 8px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);\n  padding: 10px;\n}\n\n.menu-dropdown button {\n  display: block;\n  width: 200px;\n  padding: 10px;\n  margin: 5px 0;\n  background-color: #4caf50;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n}\n\n.menu-dropdown button:hover {\n  background-color: #45a049;\n}\n\n.emoji-container {\n  padding: 30px;\n  border-radius: 12px;\n  text-align: center;\n  width: 80%;\n  max-width: 600px;\n  background-color: rgba(0, 0, 0, 0.1);\n  box-shadow: 0 0 17px black;\n}\n\n.emoji-group {\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  gap: 20px;\n  margin-bottom: 20px;\n}\n\n.emoji {\n  font-size: 3rem;\n  cursor: pointer;\n  padding: 15px;\n  border-radius: 50%;\n  transition: transform 0.2s ease, box-shadow 0.2s ease;\n  background-color: #fff;\n  border: 2px solid transparent;\n}\n\n.emoji:hover {\n  transform: scale(1.2);\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);\n}\n\n.emoji.selected {\n  border: 2px solid #4caf50;\n  background-color: #e8f5e9;\n}\n\n.submit-btn {\n  background-color: #4caf50;\n  color: white;\n  border: none;\n  padding: 15px 32px;\n  font-size: 18px;\n  cursor: pointer;\n  border-radius: 5px;\n  transition: background-color 0.3s ease;\n  width: 100%;\n}\n\n.submit-btn:disabled {\n  background-color: #ddd;\n  cursor: not-allowed;\n}\n\n.submit-btn:hover:enabled {\n  background-color: #45a049;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}