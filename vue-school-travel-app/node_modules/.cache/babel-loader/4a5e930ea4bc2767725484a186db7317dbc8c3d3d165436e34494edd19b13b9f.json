{"ast":null,"code":"import { ref } from \"vue\";\nimport axios from \"axios\";\nimport HomeHeader from \"../components/HomeHeader.vue\";\n\n// 定义响应式变量\n\nexport default {\n  __name: 'EmojiView',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const hastoken = ref(!!localStorage.getItem(\"token\"));\n    const isMenuVisible = ref(false);\n    const isEmojiPageVisible = ref(true); // 默认显示表情选择页面\n    const isPasswordChangePageVisible = ref(false); // 默认不显示密码修改页面\n    const selectedEmoji = ref(\"\");\n    const oldPassword = ref(\"\");\n    const newPassword = ref(\"\");\n    const confirmPassword = ref(\"\");\n\n    // 控制菜单的显示与隐藏\n    const toggleMenu = () => {\n      isMenuVisible.value = !isMenuVisible.value;\n    };\n\n    // 选择表情的函数\n    function selectEmoji(emoji) {\n      selectedEmoji.value = emoji; // 设置选中的表情\n    }\n\n    // 提交表情的函数\n    const submitEmoji = async () => {\n      if (!selectedEmoji.value) return;\n      const token = localStorage.getItem(\"token\");\n      try {\n        const response = await axios.post(\"/api2/emoji/post\", {\n          emojiCode: selectedEmoji.value\n        }, {\n          headers: {\n            token: `${token}`\n          }\n        });\n        if (response.data.code === 200) {\n          alert(\"表情发送成功\");\n        } else {\n          alert(\"表情发送失败\");\n        }\n      } catch (error) {\n        alert(\"请求失败，请稍后重试\");\n      }\n    };\n\n    // 查看用户信息\n    const userinfo = ref(\"\");\n    const fetchUserInfo = async () => {\n      const token = localStorage.getItem(\"token\");\n      try {\n        userinfo.value = await axios.get(\"/api2/user/info/get\", {\n          headers: {\n            token: `${token}`\n          }\n        });\n        if (userinfo.value.data.code === 200) {} else {\n          alert(\"获取用户信息失败\");\n        }\n      } catch (error) {\n        alert(\"请求失败，请稍后重试\");\n      }\n    };\n\n    // 查看表情历史\n    const fetchEmojiHistory = async () => {\n      const token = localStorage.getItem(\"token\");\n      try {\n        const response = await axios.get(\"/api2/emoji/findByPage/1/10\", {\n          headers: {\n            token: `${token}`\n          }\n        });\n        if (response.data.code === 200) {\n          console.log(\"表情历史：\", response.data.data);\n        } else {\n          alert(\"获取表情历史失败\");\n        }\n      } catch (error) {\n        alert(\"请求失败，请稍后重试\");\n      }\n    };\n\n    // 跳转到密码修改页面\n    const goToPasswordChangePage = () => {\n      isPasswordChangePageVisible.value = true;\n      isEmojiPageVisible.value = false; // 隐藏表情选择页面\n    };\n\n    // 修改密码\n    const changePassword = async () => {\n      if (newPassword.value !== confirmPassword.value) {\n        alert(\"新密码和确认密码不一致\");\n        return;\n      }\n      const token = localStorage.getItem(\"token\");\n      try {\n        const response = await axios.post(\"/api2/user/change-password\", {\n          oldPassword: oldPassword.value,\n          newPassword: newPassword.value\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (response.data.code === 200) {\n          alert(\"密码修改成功\");\n          isPasswordChangePageVisible.value = false; // 修改成功后返回\n          isEmojiPageVisible.value = true;\n        } else {\n          alert(\"密码修改失败\");\n        }\n      } catch (error) {\n        alert(\"请求失败，请稍后重试\");\n      }\n    };\n    const __returned__ = {\n      hastoken,\n      isMenuVisible,\n      isEmojiPageVisible,\n      isPasswordChangePageVisible,\n      selectedEmoji,\n      oldPassword,\n      newPassword,\n      confirmPassword,\n      toggleMenu,\n      selectEmoji,\n      submitEmoji,\n      userinfo,\n      fetchUserInfo,\n      fetchEmojiHistory,\n      goToPasswordChangePage,\n      changePassword,\n      ref,\n      get axios() {\n        return axios;\n      },\n      HomeHeader\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","axios","HomeHeader","hastoken","localStorage","getItem","isMenuVisible","isEmojiPageVisible","isPasswordChangePageVisible","selectedEmoji","oldPassword","newPassword","confirmPassword","toggleMenu","value","selectEmoji","emoji","submitEmoji","token","response","post","emojiCode","headers","data","code","alert","error","userinfo","fetchUserInfo","get","fetchEmojiHistory","console","log","goToPasswordChangePage","changePassword","Authorization"],"sources":["D:/_xhf/java/html_css_javascript/vue/vue-school-travel-app/src/views/EmojiView.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- 右上角菜单按钮 -->\n    <div class=\"menu-button\" @click=\"toggleMenu\" v-if=\"hastoken\">☰</div>\n\n    <!-- 弹出菜单 -->\n    <div v-if=\"isMenuVisible\" class=\"menu-dropdown\">\n      <button @click=\"fetchUserInfo\">查看用户信息</button>\n      <button @click=\"goToPasswordChangePage\">修改密码</button>\n      <button @click=\"fetchEmojiHistory\">查看表情历史</button>\n    </div>\n\n    <!-- 中间表情选择界面 -->\n    <template v-if=\"hastoken && isEmojiPageVisible\">\n      <div class=\"body\">\n        <div class=\"emoji-container\">\n          <h2>你现在的心情如何？</h2>\n          <div class=\"emoji-group\">\n            <div\n              class=\"emoji\"\n              :class=\"{ selected: selectedEmoji === 'confused' }\"\n              @click=\"selectEmoji('confused')\"\n            >\n              😕\n            </div>\n            <div\n              class=\"emoji\"\n              :class=\"{ selected: selectedEmoji === 'angry' }\"\n              @click=\"selectEmoji('angry')\"\n            >\n              😡\n            </div>\n            <div\n              class=\"emoji\"\n              :class=\"{ selected: selectedEmoji === 'laughing' }\"\n              @click=\"selectEmoji('laughing')\"\n            >\n              😆\n            </div>\n            <div\n              class=\"emoji\"\n              :class=\"{ selected: selectedEmoji === 'sleepy' }\"\n              @click=\"selectEmoji('sleepy')\"\n            >\n              😴\n            </div>\n            <div\n              class=\"emoji\"\n              :class=\"{ selected: selectedEmoji === 'worried' }\"\n              @click=\"selectEmoji('worried')\"\n            >\n              😨\n            </div>\n            <div\n              class=\"emoji\"\n              :class=\"{ selected: selectedEmoji === 'smiling' }\"\n              @click=\"selectEmoji('smiling')\"\n            >\n              🙂\n            </div>\n            <div\n              class=\"emoji\"\n              :class=\"{ selected: selectedEmoji === 'disappointed' }\"\n              @click=\"selectEmoji('disappointed')\"\n            >\n              😞\n            </div>\n            <div\n              class=\"emoji\"\n              :class=\"{ selected: selectedEmoji === 'smirking' }\"\n              @click=\"selectEmoji('smirking')\"\n            >\n              😏\n            </div>\n          </div>\n\n          <!-- 隐藏字段，用来存储选中的表情 -->\n          <input\n            type=\"hidden\"\n            id=\"selectedEmoji\"\n            name=\"emoji\"\n            :value=\"selectedEmoji\"\n          />\n\n          <!-- 提交按钮 -->\n          <button\n            type=\"button\"\n            class=\"submit-btn\"\n            :disabled=\"!selectedEmoji\"\n            @click=\"submitEmoji\"\n          >\n            确认提交\n          </button>\n        </div>\n      </div>\n    </template>\n\n    <!-- 如果没有 token，显示提示信息 -->\n    <template v-if=\"!hastoken\">\n      <HomeHeader />\n      <div class=\"stress\">请先注册或登录再使用相关功能</div>\n    </template>\n\n    <!-- 密码修改页面 -->\n    <template v-if=\"isPasswordChangePageVisible\">\n      <div class=\"password-change-overlay\">\n        <div class=\"password-change-container\">\n          <div>\n            <i\n              class=\"fa-solid fa-xmark fa-2x\"\n              @click=\"\n                (isPasswordChangePageVisible = false),\n                  (isEmojiPageVisible = true)\n              \"\n              style=\"display: block; text-align: right\"\n            ></i>\n          </div>\n          <h2>修改密码</h2>\n          <form @submit.prevent=\"changePassword\">\n            <div class=\"input-group\">\n              <label for=\"oldPassword\">旧密码</label>\n              <input\n                type=\"password\"\n                id=\"oldPassword\"\n                v-model=\"oldPassword\"\n                required\n              />\n            </div>\n            <div class=\"input-group\">\n              <label for=\"newPassword\">新密码</label>\n              <input\n                type=\"password\"\n                id=\"newPassword\"\n                v-model=\"newPassword\"\n                required\n              />\n            </div>\n            <div class=\"input-group\">\n              <label for=\"confirmPassword\">确认新密码</label>\n              <input\n                type=\"password\"\n                id=\"confirmPassword\"\n                v-model=\"confirmPassword\"\n                required\n              />\n            </div>\n            <button type=\"submit\" class=\"submit-btn\">提交</button>\n          </form>\n        </div>\n      </div>\n    </template>\n    <!-- 查看用户信息 -->\n    <template>\n      <div v-if=\"userinfo\" class=\"user-info-box\">\n        <h3>用户信息</h3>\n        <ul>\n          <li><strong>用户名：</strong>{{ userInfo.userName }}</li>\n          <li><strong>邮箱：</strong>{{ userInfo.email }}</li>\n          <li><strong>手机号：</strong>{{ userInfo.phone }}</li>\n          <li><strong>创建时间：</strong>{{ userInfo.createTime }}</li>\n        </ul>\n      </div>\n    </template>\n  </div>\n</template>\n\n<script setup>\nimport { ref } from \"vue\";\nimport axios from \"axios\";\nimport HomeHeader from \"../components/HomeHeader.vue\";\n\n// 定义响应式变量\nconst hastoken = ref(!!localStorage.getItem(\"token\"));\nconst isMenuVisible = ref(false);\nconst isEmojiPageVisible = ref(true); // 默认显示表情选择页面\nconst isPasswordChangePageVisible = ref(false); // 默认不显示密码修改页面\nconst selectedEmoji = ref(\"\");\nconst oldPassword = ref(\"\");\nconst newPassword = ref(\"\");\nconst confirmPassword = ref(\"\");\n\n// 控制菜单的显示与隐藏\nconst toggleMenu = () => {\n  isMenuVisible.value = !isMenuVisible.value;\n};\n\n// 选择表情的函数\nfunction selectEmoji(emoji) {\n  selectedEmoji.value = emoji; // 设置选中的表情\n}\n\n// 提交表情的函数\nconst submitEmoji = async () => {\n  if (!selectedEmoji.value) return;\n\n  const token = localStorage.getItem(\"token\");\n  try {\n    const response = await axios.post(\n      \"/api2/emoji/post\",\n      { emojiCode: selectedEmoji.value },\n      {\n        headers: {\n          token: `${token}`,\n        },\n      }\n    );\n    if (response.data.code === 200) {\n      alert(\"表情发送成功\");\n    } else {\n      alert(\"表情发送失败\");\n    }\n  } catch (error) {\n    alert(\"请求失败，请稍后重试\");\n  }\n};\n\n// 查看用户信息\nconst userinfo = ref(\"\");\nconst fetchUserInfo = async () => {\n  const token = localStorage.getItem(\"token\");\n  try {\n    userinfo.value = await axios.get(\"/api2/user/info/get\", {\n      headers: {\n        token: `${token}`,\n      },\n    });\n    if (userinfo.value.data.code === 200) {\n    } else {\n      alert(\"获取用户信息失败\");\n    }\n  } catch (error) {\n    alert(\"请求失败，请稍后重试\");\n  }\n};\n\n// 查看表情历史\nconst fetchEmojiHistory = async () => {\n  const token = localStorage.getItem(\"token\");\n  try {\n    const response = await axios.get(\"/api2/emoji/findByPage/1/10\", {\n      headers: {\n        token: `${token}`,\n      },\n    });\n    if (response.data.code === 200) {\n      console.log(\"表情历史：\", response.data.data);\n    } else {\n      alert(\"获取表情历史失败\");\n    }\n  } catch (error) {\n    alert(\"请求失败，请稍后重试\");\n  }\n};\n\n// 跳转到密码修改页面\nconst goToPasswordChangePage = () => {\n  isPasswordChangePageVisible.value = true;\n  isEmojiPageVisible.value = false; // 隐藏表情选择页面\n};\n\n// 修改密码\nconst changePassword = async () => {\n  if (newPassword.value !== confirmPassword.value) {\n    alert(\"新密码和确认密码不一致\");\n    return;\n  }\n\n  const token = localStorage.getItem(\"token\");\n  try {\n    const response = await axios.post(\n      \"/api2/user/change-password\",\n      {\n        oldPassword: oldPassword.value,\n        newPassword: newPassword.value,\n      },\n      {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      }\n    );\n\n    if (response.data.code === 200) {\n      alert(\"密码修改成功\");\n      isPasswordChangePageVisible.value = false; // 修改成功后返回\n      isEmojiPageVisible.value = true;\n    } else {\n      alert(\"密码修改失败\");\n    }\n  } catch (error) {\n    alert(\"请求失败，请稍后重试\");\n  }\n};\n</script>\n\n<style scoped>\n.stress {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  font-size: 24px;\n  color: red;\n}\n\n.menu-button {\n  position: fixed;\n  top: 20px;\n  right: 20px;\n  font-size: 24px;\n  cursor: pointer;\n  z-index: 10;\n}\n\n.menu-dropdown {\n  position: fixed;\n  top: 60px;\n  right: 20px;\n  background-color: white;\n  border-radius: 8px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);\n  padding: 10px;\n  z-index: 9;\n}\n\n.menu-dropdown button {\n  display: block;\n  width: 200px;\n  padding: 10px;\n  margin: 5px 0;\n  background-color: #4caf50;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n}\n\n.menu-dropdown button:hover {\n  background-color: #45a049;\n}\n\n.body {\n  font-family: Arial, sans-serif;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  margin: 0;\n}\n\n.emoji-container {\n  padding: 30px;\n  border-radius: 12px;\n  text-align: center;\n  width: 80%;\n  max-width: 600px;\n  border-radius: 25px;\n  background-color: rgba(0, 0, 0, 0.1);\n  box-shadow: 0 0 17px black;\n}\n\n.emoji-group {\n  display: grid;\n  grid-template-columns: repeat(4, 1fr); /* 每行4个表情 */\n  gap: 20px;\n  margin-bottom: 20px;\n}\n\n.emoji {\n  font-size: 3rem;\n  cursor: pointer;\n  padding: 15px;\n  border-radius: 50%;\n  transition: transform 0.2s ease, box-shadow 0.2s ease;\n  background-color: #fff;\n  border: 2px solid transparent;\n}\n\n.emoji:hover {\n  transform: scale(1.2);\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);\n}\n\n.emoji.selected {\n  border: 2px solid #4caf50;\n  background-color: #e8f5e9;\n}\n\n.submit-btn {\n  background-color: #4caf50;\n  color: white;\n  border: none;\n  padding: 15px 32px;\n  font-size: 18px;\n  cursor: pointer;\n  border-radius: 5px;\n  transition: background-color 0.3s ease;\n  width: 100%;\n}\n\n.submit-btn:disabled {\n  background-color: #ddd;\n  cursor: not-allowed;\n}\n\n.submit-btn:hover:enabled {\n  background-color: #45a049;\n}\n\nh2 {\n  font-size: 24px;\n  margin-bottom: 20px;\n  color: #333;\n}\n\n.password-change-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.1); /* 半透明背景 */\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 200;\n}\n\n.password-change-container {\n  padding: 30px;\n  border-radius: 12px;\n  background-color: rgba(0, 0, 0, 0.1);\n  box-shadow: 0 0 17px black;\n  width: 400px;\n}\n\n.input-group {\n  margin-bottom: 20px;\n}\n\n.input-group label {\n  display: block;\n  margin-bottom: 5px;\n}\n\n.input-group input {\n  width: 100%;\n  padding: 10px;\n  font-size: 16px;\n  border-radius: 5px;\n  border: 1px solid #ccc;\n}\n\n.submit-btn {\n  width: 100%;\n  margin-top: 10px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}