{"ast":null,"code":"import { ref } from \"vue\";\nimport axios from \"axios\";\nimport HomeHeader from \"../components/HomeHeader.vue\";\n\n// 定义响应式变量\n\nexport default {\n  __name: 'EmojiView',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const hastoken = ref(!!localStorage.getItem(\"token\"));\n    const isMenuVisible = ref(false);\n    const isEmojiPageVisible = ref(false);\n    const selectedEmoji = ref(\"\");\n\n    // 控制菜单的显示与隐藏\n    const toggleMenu = () => {\n      isMenuVisible.value = !isMenuVisible.value;\n    };\n\n    // 选择表情的函数\n    function selectEmoji(emoji) {\n      selectedEmoji.value = emoji; // 设置选中的表情\n    }\n\n    // 提交表情的函数\n    const submitEmoji = async () => {\n      if (!selectedEmoji.value) return;\n      const token = localStorage.getItem(\"token\");\n      try {\n        const response = await axios.post(\"/emoji/post\", {\n          emojiCode: selectedEmoji.value\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (response.data.code === 200) {\n          alert(\"表情发送成功\");\n        } else {\n          alert(\"表情发送失败\");\n        }\n      } catch (error) {\n        alert(\"请求失败，请稍后重试\");\n      }\n    };\n\n    // 查看用户信息\n    const fetchUserInfo = async () => {\n      const token = localStorage.getItem(\"token\");\n      try {\n        const response = await axios.get(\"/user/info/get\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (response.data.code === 200) {\n          alert(`用户信息：${JSON.stringify(response.data.data)}`);\n        } else {\n          alert(\"获取用户信息失败\");\n        }\n      } catch (error) {\n        alert(\"请求失败，请稍后重试\");\n      }\n    };\n\n    // 查看表情历史\n    const fetchEmojiHistory = async () => {\n      const token = localStorage.getItem(\"token\");\n      try {\n        const response = await axios.get(\"/emoji/findByPage/1/10\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (response.data.code === 200) {\n          console.log(\"表情历史：\", response.data.data);\n        } else {\n          alert(\"获取表情历史失败\");\n        }\n      } catch (error) {\n        alert(\"请求失败，请稍后重试\");\n      }\n    };\n\n    // 跳转到表情页面\n    const goToEmojiPage = () => {\n      isEmojiPageVisible.value = true;\n    };\n    const __returned__ = {\n      hastoken,\n      isMenuVisible,\n      isEmojiPageVisible,\n      selectedEmoji,\n      toggleMenu,\n      selectEmoji,\n      submitEmoji,\n      fetchUserInfo,\n      fetchEmojiHistory,\n      goToEmojiPage,\n      ref,\n      get axios() {\n        return axios;\n      },\n      HomeHeader\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","axios","HomeHeader","hastoken","localStorage","getItem","isMenuVisible","isEmojiPageVisible","selectedEmoji","toggleMenu","value","selectEmoji","emoji","submitEmoji","token","response","post","emojiCode","headers","Authorization","data","code","alert","error","fetchUserInfo","get","JSON","stringify","fetchEmojiHistory","console","log","goToEmojiPage"],"sources":["D:/_xhf/java/html_css_javascript/vue/vuerouter/vue-school-travel-app/src/views/EmojiView.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- 右上角菜单按钮 -->\n    <div class=\"menu-button\" @click=\"toggleMenu\">☰</div>\n\n    <!-- 弹出菜单 -->\n    <div v-if=\"isMenuVisible\" class=\"menu-dropdown\">\n      <button @click=\"fetchUserInfo\">查看用户信息</button>\n      <button @click=\"goToEmojiPage\">发送表情</button>\n      <button @click=\"fetchEmojiHistory\">查看表情历史</button>\n    </div>\n\n    <!-- 如果有 token 显示表情选择界面 -->\n    <template v-if=\"hastoken\">\n      <div v-if=\"isEmojiPageVisible\" class=\"body\">\n        <div class=\"emoji-container\">\n          <form @submit.prevent=\"submitEmoji\">\n            <h2>你现在的心情如何？</h2>\n\n            <div class=\"emoji-group\">\n              <div\n                class=\"emoji\"\n                :class=\"{ selected: selectedEmoji === 'confused' }\"\n                @click=\"selectEmoji('confused')\"\n              >\n                😕\n              </div>\n              <div\n                class=\"emoji\"\n                :class=\"{ selected: selectedEmoji === 'angry' }\"\n                @click=\"selectEmoji('angry')\"\n              >\n                😡\n              </div>\n              <div\n                class=\"emoji\"\n                :class=\"{ selected: selectedEmoji === 'laughing' }\"\n                @click=\"selectEmoji('laughing')\"\n              >\n                😆\n              </div>\n              <div\n                class=\"emoji\"\n                :class=\"{ selected: selectedEmoji === 'sleepy' }\"\n                @click=\"selectEmoji('sleepy')\"\n              >\n                😴\n              </div>\n              <div\n                class=\"emoji\"\n                :class=\"{ selected: selectedEmoji === 'worried' }\"\n                @click=\"selectEmoji('worried')\"\n              >\n                😨\n              </div>\n              <div\n                class=\"emoji\"\n                :class=\"{ selected: selectedEmoji === 'smiling' }\"\n                @click=\"selectEmoji('smiling')\"\n              >\n                🙂\n              </div>\n              <div\n                class=\"emoji\"\n                :class=\"{ selected: selectedEmoji === 'disappointed' }\"\n                @click=\"selectEmoji('disappointed')\"\n              >\n                😞\n              </div>\n              <div\n                class=\"emoji\"\n                :class=\"{ selected: selectedEmoji === 'smirking' }\"\n                @click=\"selectEmoji('smirking')\"\n              >\n                😏\n              </div>\n            </div>\n\n            <!-- 隐藏字段，用来存储选中的表情 -->\n            <input\n              type=\"hidden\"\n              id=\"selectedEmoji\"\n              name=\"emoji\"\n              :value=\"selectedEmoji\"\n            />\n\n            <!-- 提交按钮 -->\n            <button type=\"submit\" class=\"submit-btn\" :disabled=\"!selectedEmoji\">\n              确认提交\n            </button>\n          </form>\n        </div>\n      </div>\n    </template>\n\n    <!-- 如果没有 token，显示 HomeHeader -->\n    <template v-else>\n      <HomeHeader />\n      <div class=\"stress\">请先注册或登录再使用相关功能</div>\n    </template>\n  </div>\n</template>\n\n<script setup>\nimport { ref } from \"vue\";\nimport axios from \"axios\";\nimport HomeHeader from \"../components/HomeHeader.vue\";\n\n// 定义响应式变量\nconst hastoken = ref(!!localStorage.getItem(\"token\"));\nconst isMenuVisible = ref(false);\nconst isEmojiPageVisible = ref(false);\nconst selectedEmoji = ref(\"\");\n\n// 控制菜单的显示与隐藏\nconst toggleMenu = () => {\n  isMenuVisible.value = !isMenuVisible.value;\n};\n\n// 选择表情的函数\nfunction selectEmoji(emoji) {\n  selectedEmoji.value = emoji; // 设置选中的表情\n}\n\n// 提交表情的函数\nconst submitEmoji = async () => {\n  if (!selectedEmoji.value) return;\n\n  const token = localStorage.getItem(\"token\");\n  try {\n    const response = await axios.post(\n      \"/emoji/post\",\n      { emojiCode: selectedEmoji.value },\n      {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      }\n    );\n    if (response.data.code === 200) {\n      alert(\"表情发送成功\");\n    } else {\n      alert(\"表情发送失败\");\n    }\n  } catch (error) {\n    alert(\"请求失败，请稍后重试\");\n  }\n};\n\n// 查看用户信息\nconst fetchUserInfo = async () => {\n  const token = localStorage.getItem(\"token\");\n  try {\n    const response = await axios.get(\"/user/info/get\", {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    if (response.data.code === 200) {\n      alert(`用户信息：${JSON.stringify(response.data.data)}`);\n    } else {\n      alert(\"获取用户信息失败\");\n    }\n  } catch (error) {\n    alert(\"请求失败，请稍后重试\");\n  }\n};\n\n// 查看表情历史\nconst fetchEmojiHistory = async () => {\n  const token = localStorage.getItem(\"token\");\n  try {\n    const response = await axios.get(\"/emoji/findByPage/1/10\", {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    if (response.data.code === 200) {\n      console.log(\"表情历史：\", response.data.data);\n    } else {\n      alert(\"获取表情历史失败\");\n    }\n  } catch (error) {\n    alert(\"请求失败，请稍后重试\");\n  }\n};\n\n// 跳转到表情页面\nconst goToEmojiPage = () => {\n  isEmojiPageVisible.value = true;\n};\n</script>\n\n<style scoped>\n.stress {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  font-size: 24px;\n  color: red;\n}\n\n.menu-button {\n  position: fixed;\n  top: 20px;\n  right: 20px;\n  font-size: 24px;\n  cursor: pointer;\n}\n\n.menu-dropdown {\n  position: fixed;\n  top: 60px;\n  right: 20px;\n  background-color: white;\n  border-radius: 8px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);\n  padding: 10px;\n}\n\n.menu-dropdown button {\n  display: block;\n  width: 200px;\n  padding: 10px;\n  margin: 5px 0;\n  background-color: #4caf50;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n}\n\n.menu-dropdown button:hover {\n  background-color: #45a049;\n}\n\n.emoji-container {\n  padding: 30px;\n  border-radius: 12px;\n  text-align: center;\n  width: 80%;\n  max-width: 600px;\n  background-color: rgba(0, 0, 0, 0.1);\n  box-shadow: 0 0 17px black;\n}\n\n.emoji-group {\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  gap: 20px;\n  margin-bottom: 20px;\n}\n\n.emoji {\n  font-size: 3rem;\n  cursor: pointer;\n  padding: 15px;\n  border-radius: 50%;\n  transition: transform 0.2s ease, box-shadow 0.2s ease;\n  background-color: #fff;\n  border: 2px solid transparent;\n}\n\n.emoji:hover {\n  transform: scale(1.2);\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);\n}\n\n.emoji.selected {\n  border: 2px solid #4caf50;\n  background-color: #e8f5e9;\n}\n\n.submit-btn {\n  background-color: #4caf50;\n  color: white;\n  border: none;\n  padding: 15px 32px;\n  font-size: 18px;\n  cursor: pointer;\n  border-radius: 5px;\n  transition: background-color 0.3s ease;\n  width: 100%;\n}\n\n.submit-btn:disabled {\n  background-color: #ddd;\n  cursor: not-allowed;\n}\n\n.submit-btn:hover:enabled {\n  background-color: #45a049;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}