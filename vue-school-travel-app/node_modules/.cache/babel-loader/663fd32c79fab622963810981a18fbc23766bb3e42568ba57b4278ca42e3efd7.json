{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache) {\n  const _component_login = _resolveComponent(\"login\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_cache[0] || (_cache[0] = _createElementVNode(\"header\", null, null, -1 /* HOISTED */)), _createVNode(_component_login)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_createElementVNode","_createVNode","_component_login"],"sources":["D:\\_xhf\\java\\html_css_javascript\\vue\\vuerouter\\vue-school-travel-app\\src\\views\\LoginView.vue"],"sourcesContent":["<template>\n  <header></header>\n  <login></login>\n</template>\n<scrip setup>\n    import header from \"../components/AppHeader.vue\"\n</scrip>\n\n<!-- <template>\n  <div>\n    <h1>Login</h1>\n    <form @submit.prevent=\"handleLogin\">\n      <div>\n        <label>Username:</label>\n        <input v-model=\"userName\" type=\"text\" required />\n      </div>\n      <div>\n        <label>Password:</label>\n        <input v-model=\"password\" type=\"password\" required />\n      </div>\n      <button type=\"submit\">Login</button>\n    </form>\n    <p v-if=\"errorMessage\">{{ errorMessage }}</p>\n  </div>\n</template>\n\n<script setup>\nimport { ref } from \"vue\";\nimport { useRouter } from \"vue-router\";\nimport axios from \"../utils/request\";\n\nconst userName = ref(\"\");\nconst password = ref(\"\");\nconst errorMessage = ref(\"\");\nconst router = useRouter();\n\nconst handleLogin = async () => {\n  try {\n    const response = await axios.post(\"/login\", {\n      userName: userName.value,\n      password: password.value,\n    });\n    if (response.code === 200) {\n      localStorage.setItem(\"token\", response.data.token);\n      router.push(\"/success\");\n    } else {\n      errorMessage.value = response.message;\n    }\n  } catch (error) {\n    errorMessage.value = \"An error occurred. Please try again.\";\n  }\n};\n</script> -->\n"],"mappings":";;;uBAAAA,mBAAA,CAAAC,SAAA,S,0BACEC,mBAAA,CAAiB,0CACjBC,YAAA,CAAeC,gBAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}