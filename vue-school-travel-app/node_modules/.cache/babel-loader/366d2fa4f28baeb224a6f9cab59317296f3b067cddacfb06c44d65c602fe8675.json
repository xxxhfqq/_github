{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"user-management\"\n};\nconst _hoisted_2 = {\n  class: \"menu\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"tab-content\"\n};\nconst _hoisted_4 = {\n  key: 0,\n  class: \"info\"\n};\nconst _hoisted_5 = {\n  key: 1,\n  class: \"tab-content\"\n};\nconst _hoisted_6 = {\n  class: \"filters\"\n};\nconst _hoisted_7 = {\n  key: 0\n};\nconst _hoisted_8 = {\n  class: \"id\"\n};\nconst _hoisted_9 = {\n  class: \"name\"\n};\nconst _hoisted_10 = {\n  class: \"email\"\n};\nconst _hoisted_11 = {\n  class: \"phone\"\n};\nconst _hoisted_12 = {\n  class: \"time\"\n};\nconst _hoisted_13 = {\n  class: \"pagination\"\n};\nconst _hoisted_14 = [\"disabled\"];\nconst _hoisted_15 = [\"disabled\"];\nconst _hoisted_16 = {\n  key: 2,\n  class: \"tab-content\"\n};\nconst _hoisted_17 = {\n  class: \"filters\"\n};\nconst _hoisted_18 = {\n  key: 0\n};\nconst _hoisted_19 = {\n  key: 3,\n  class: \"tab-content\"\n};\nconst _hoisted_20 = {\n  class: \"filters\"\n};\nconst _hoisted_21 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" 只有在有 token 的情况下显示用户管理和表情查询功能 \"), $setup.hastoken || 1 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"button\", {\n    class: _normalizeClass({\n      active: $setup.activeTab === 'info'\n    }),\n    onClick: _cache[0] || (_cache[0] = $event => $setup.switchTab('info'))\n  }, \" 查询用户信息 \", 2 /* CLASS */), _createElementVNode(\"button\", {\n    class: _normalizeClass({\n      active: $setup.activeTab === 'list'\n    }),\n    onClick: _cache[1] || (_cache[1] = $event => $setup.switchTab('list'))\n  }, \" 分页查询用户列表 \", 2 /* CLASS */), _createElementVNode(\"button\", {\n    class: _normalizeClass({\n      active: $setup.activeTab === 'emojiCount'\n    }),\n    onClick: _cache[2] || (_cache[2] = $event => $setup.switchTab('emojiCount'))\n  }, \" 查询表情数量 \", 2 /* CLASS */), _createElementVNode(\"button\", {\n    class: _normalizeClass({\n      active: $setup.activeTab === 'emojiHourly'\n    }),\n    onClick: _cache[3] || (_cache[3] = $event => $setup.switchTab('emojiHourly'))\n  }, \" 表情变化查询 \", 2 /* CLASS */), _createElementVNode(\"button\", {\n    onClick: $setup.exportEmojiData,\n    class: \"export-btn\"\n  }, \" 导出表情数据 \")]), _createCommentVNode(\" 用户信息查询 \"), $setup.activeTab === 'info' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_cache[19] || (_cache[19] = _createElementVNode(\"h2\", null, \"用户信息\", -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    onClick: $setup.fetchUserInfo\n  }, \"获取用户信息\"), $setup.userInfo ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createElementVNode(\"p\", null, [_cache[14] || (_cache[14] = _createElementVNode(\"strong\", null, \"ID:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($setup.userInfo.id), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[15] || (_cache[15] = _createElementVNode(\"strong\", null, \"用户名:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($setup.userInfo.userName), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[16] || (_cache[16] = _createElementVNode(\"strong\", null, \"邮箱:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($setup.userInfo.email), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[17] || (_cache[17] = _createElementVNode(\"strong\", null, \"电话:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($setup.userInfo.phone), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[18] || (_cache[18] = _createElementVNode(\"strong\", null, \"创建时间:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($setup.userInfo.createTime), 1 /* TEXT */)])])) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 分页用户列表 \"), $setup.activeTab === 'list' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_cache[26] || (_cache[26] = _createElementVNode(\"h2\", null, \"分页用户列表\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", null, [_cache[20] || (_cache[20] = _createElementVNode(\"label\", null, \"页数：\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $setup.pagination.pageNum = $event),\n    type: \"number\",\n    min: \"1\",\n    placeholder: \"请输入页码\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.pagination.pageNum, void 0, {\n    number: true\n  }]])]), _createElementVNode(\"div\", null, [_cache[21] || (_cache[21] = _createElementVNode(\"label\", null, \"每页个数：\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $setup.pagination.pageSize = $event),\n    type: \"number\",\n    min: \"1\",\n    placeholder: \"请输入每页个数\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.pagination.pageSize, void 0, {\n    number: true\n  }]])]), _createElementVNode(\"div\", null, [_cache[22] || (_cache[22] = _createElementVNode(\"label\", null, \"关键字：\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $setup.filters.keyword = $event),\n    type: \"text\",\n    placeholder: \"请输入关键字\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.filters.keyword]])]), _createElementVNode(\"div\", null, [_cache[23] || (_cache[23] = _createElementVNode(\"label\", null, \"起始时间：\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => $setup.filters.createTimeBegin = $event),\n    type: \"date\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.filters.createTimeBegin]])]), _createElementVNode(\"div\", null, [_cache[24] || (_cache[24] = _createElementVNode(\"label\", null, \"结束时间：\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => $setup.filters.createTimeEnd = $event),\n    type: \"date\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.filters.createTimeEnd]])]), _createElementVNode(\"button\", {\n    onClick: $setup.fetchUserList\n  }, \"查询\")]), $setup.userList && $setup.userList.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [_createElementVNode(\"table\", null, [_cache[25] || (_cache[25] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"ID\"), _createElementVNode(\"th\", null, \"用户名\"), _createElementVNode(\"th\", null, \"邮箱\"), _createElementVNode(\"th\", null, \"电话\"), _createElementVNode(\"th\", null, \"创建时间\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.userList, user => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: user.id\n    }, [_createElementVNode(\"td\", _hoisted_8, _toDisplayString(user.id), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_9, _toDisplayString(user.userName), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_10, _toDisplayString(user.email), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_11, _toDisplayString(user.phone), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_12, _toDisplayString(user.createTime), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"p\", null, \"总记录数: \" + _toDisplayString($setup.pagination.total), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"button\", {\n    disabled: $setup.pagination.pageNum === 1,\n    onClick: _cache[9] || (_cache[9] = $event => $setup.changePage($setup.pagination.pageNum - 1))\n  }, \" 上一页 \", 8 /* PROPS */, _hoisted_14), _createCommentVNode(\" 下一页按钮 \"), _createElementVNode(\"button\", {\n    disabled: $setup.pagination.pageNum * $setup.pagination.pageSize >= $setup.pagination.total && $setup.pagination.total > 0,\n    onClick: _cache[10] || (_cache[10] = $event => $setup.changePage($setup.pagination.pageNum + 1))\n  }, \" 下一页 \", 8 /* PROPS */, _hoisted_15)])])) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 查询表情数量 \"), $setup.activeTab === 'emojiCount' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_16, [_cache[30] || (_cache[30] = _createElementVNode(\"h2\", null, \"查询表情数量\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_17, [_createElementVNode(\"div\", null, [_cache[27] || (_cache[27] = _createElementVNode(\"label\", null, \"起始时间：\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[11] || (_cache[11] = $event => $setup.emojiFilters.startTime = $event),\n    type: \"date\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.emojiFilters.startTime]])]), _createElementVNode(\"div\", null, [_cache[28] || (_cache[28] = _createElementVNode(\"label\", null, \"结束时间：\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[12] || (_cache[12] = $event => $setup.emojiFilters.endTime = $event),\n    type: \"date\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.emojiFilters.endTime]])]), _createElementVNode(\"button\", {\n    onClick: $setup.fetchEmojiCount\n  }, \"查询\")]), $setup.emojiCount ? (_openBlock(), _createElementBlock(\"div\", _hoisted_18, [_createElementVNode(\"table\", null, [_cache[29] || (_cache[29] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"表情\"), _createElementVNode(\"th\", null, \"出现次数\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.emojiCount, (count, emoji) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: emoji\n    }, [_createElementVNode(\"td\", null, _toDisplayString(emoji), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(count), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])])) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 表情变化查询 \"), $setup.activeTab === 'emojiHourly' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_19, [_cache[33] || (_cache[33] = _createElementVNode(\"h2\", null, \"表情变化查询\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_20, [_createElementVNode(\"div\", null, [_cache[31] || (_cache[31] = _createElementVNode(\"label\", null, \"起始时间：\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[13] || (_cache[13] = $event => $setup.emojiHourlyFilters.startTime = $event),\n    type: \"date\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.emojiHourlyFilters.startTime]])]), _createElementVNode(\"button\", {\n    onClick: $setup.fetchEmojiHourly\n  }, \"查询\")]), $setup.emojiHourlyData ? (_openBlock(), _createElementBlock(\"div\", _hoisted_21, [_createElementVNode(\"table\", null, [_cache[32] || (_cache[32] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"时间\"), _createElementVNode(\"th\", null, \"表情\"), _createElementVNode(\"th\", null, \"出现次数\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.emojiHourlyData, (hourlyData, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index\n    }, [_createElementVNode(\"td\", null, _toDisplayString(hourlyData.timestamp), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(hourlyData.emoji_code1), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(hourlyData.emoji_code1_count), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])])) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true)])) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_createVNode($setup[\"HomeHeader\"]), _cache[34] || (_cache[34] = _createElementVNode(\"div\", {\n    class: \"stress\"\n  }, \"请先注册或登录再使用相关功能\", -1 /* HOISTED */))], 64 /* STABLE_FRAGMENT */))], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"names":["key","class","_createElementBlock","_Fragment","_createCommentVNode","$setup","hastoken","_hoisted_1","_createElementVNode","_hoisted_2","_normalizeClass","active","activeTab","onClick","_cache","$event","switchTab","exportEmojiData","_hoisted_3","fetchUserInfo","userInfo","_hoisted_4","_createTextVNode","_toDisplayString","id","userName","email","phone","createTime","_hoisted_5","_hoisted_6","pagination","pageNum","type","min","placeholder","number","pageSize","filters","keyword","createTimeBegin","createTimeEnd","fetchUserList","userList","length","_hoisted_7","_renderList","user","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","total","_hoisted_13","disabled","changePage","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","emojiFilters","startTime","endTime","fetchEmojiCount","emojiCount","_hoisted_18","count","emoji","_hoisted_19","_hoisted_20","emojiHourlyFilters","fetchEmojiHourly","emojiHourlyData","_hoisted_21","hourlyData","index","timestamp","emoji_code1","emoji_code1_count","_createVNode"],"sources":["D:\\_xhf\\java\\html_css_javascript\\vue\\vue-school-travel-app\\src\\views\\AdminView.vue"],"sourcesContent":["<template>\n  <!-- 只有在有 token 的情况下显示用户管理和表情查询功能 -->\n  <template v-if=\"hastoken || 1\">\n    <div class=\"user-management\">\n      <div class=\"menu\">\n        <button\n          :class=\"{ active: activeTab === 'info' }\"\n          @click=\"switchTab('info')\"\n        >\n          查询用户信息\n        </button>\n        <button\n          :class=\"{ active: activeTab === 'list' }\"\n          @click=\"switchTab('list')\"\n        >\n          分页查询用户列表\n        </button>\n        <button\n          :class=\"{ active: activeTab === 'emojiCount' }\"\n          @click=\"switchTab('emojiCount')\"\n        >\n          查询表情数量\n        </button>\n        <button\n          :class=\"{ active: activeTab === 'emojiHourly' }\"\n          @click=\"switchTab('emojiHourly')\"\n        >\n          表情变化查询\n        </button>\n        <button @click=\"exportEmojiData\" class=\"export-btn\">\n          导出表情数据\n        </button>\n      </div>\n\n      <!-- 用户信息查询 -->\n      <div v-if=\"activeTab === 'info'\" class=\"tab-content\">\n        <h2>用户信息</h2>\n        <button @click=\"fetchUserInfo\">获取用户信息</button>\n        <div v-if=\"userInfo\" class=\"info\">\n          <p><strong>ID:</strong> {{ userInfo.id }}</p>\n          <p><strong>用户名:</strong> {{ userInfo.userName }}</p>\n          <p><strong>邮箱:</strong> {{ userInfo.email }}</p>\n          <p><strong>电话:</strong> {{ userInfo.phone }}</p>\n          <p><strong>创建时间:</strong> {{ userInfo.createTime }}</p>\n        </div>\n      </div>\n\n      <!-- 分页用户列表 -->\n      <div v-if=\"activeTab === 'list'\" class=\"tab-content\">\n        <h2>分页用户列表</h2>\n        <div class=\"filters\">\n          <div>\n            <label>页数：</label>\n            <input\n              v-model.number=\"pagination.pageNum\"\n              type=\"number\"\n              min=\"1\"\n              placeholder=\"请输入页码\"\n            />\n          </div>\n          <div>\n            <label>每页个数：</label>\n            <input\n              v-model.number=\"pagination.pageSize\"\n              type=\"number\"\n              min=\"1\"\n              placeholder=\"请输入每页个数\"\n            />\n          </div>\n          <div>\n            <label>关键字：</label>\n            <input\n              v-model=\"filters.keyword\"\n              type=\"text\"\n              placeholder=\"请输入关键字\"\n            />\n          </div>\n          <div>\n            <label>起始时间：</label>\n            <input v-model=\"filters.createTimeBegin\" type=\"date\" />\n          </div>\n          <div>\n            <label>结束时间：</label>\n            <input v-model=\"filters.createTimeEnd\" type=\"date\" />\n          </div>\n          <button @click=\"fetchUserList\">查询</button>\n        </div>\n        <div v-if=\"userList && userList.length\">\n          <table>\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>用户名</th>\n                <th>邮箱</th>\n                <th>电话</th>\n                <th>创建时间</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr v-for=\"user in userList\" :key=\"user.id\">\n                <td class=\"id\">{{ user.id }}</td>\n                <td class=\"name\">{{ user.userName }}</td>\n                <td class=\"email\">{{ user.email }}</td>\n                <td class=\"phone\">{{ user.phone }}</td>\n                <td class=\"time\">{{ user.createTime }}</td>\n              </tr>\n            </tbody>\n          </table>\n          <p>总记录数: {{ pagination.total }}</p>\n          <div class=\"pagination\">\n            <button\n              :disabled=\"pagination.pageNum === 1\"\n              @click=\"changePage(pagination.pageNum - 1)\"\n            >\n              上一页\n            </button>\n\n            <!-- 下一页按钮 -->\n            <button\n              :disabled=\"\n                pagination.pageNum * pagination.pageSize >= pagination.total &&\n                pagination.total > 0\n              \"\n              @click=\"changePage(pagination.pageNum + 1)\"\n            >\n              下一页\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <!-- 查询表情数量 -->\n      <div v-if=\"activeTab === 'emojiCount'\" class=\"tab-content\">\n        <h2>查询表情数量</h2>\n        <div class=\"filters\">\n          <div>\n            <label>起始时间：</label>\n            <input v-model=\"emojiFilters.startTime\" type=\"date\" />\n          </div>\n          <div>\n            <label>结束时间：</label>\n            <input v-model=\"emojiFilters.endTime\" type=\"date\" />\n          </div>\n          <button @click=\"fetchEmojiCount\">查询</button>\n        </div>\n        <div v-if=\"emojiCount\">\n          <table>\n            <thead>\n              <tr>\n                <th>表情</th>\n                <th>出现次数</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr v-for=\"(count, emoji) in emojiCount\" :key=\"emoji\">\n                <td>{{ emoji }}</td>\n                <td>{{ count }}</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n\n      <!-- 表情变化查询 -->\n      <div v-if=\"activeTab === 'emojiHourly'\" class=\"tab-content\">\n        <h2>表情变化查询</h2>\n        <div class=\"filters\">\n          <div>\n            <label>起始时间：</label>\n            <input v-model=\"emojiHourlyFilters.startTime\" type=\"date\" />\n          </div>\n          <button @click=\"fetchEmojiHourly\">查询</button>\n        </div>\n        <div v-if=\"emojiHourlyData\">\n          <table>\n            <thead>\n              <tr>\n                <th>时间</th>\n                <th>表情</th>\n                <th>出现次数</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr v-for=\"(hourlyData, index) in emojiHourlyData\" :key=\"index\">\n                <td>{{ hourlyData.timestamp }}</td>\n                <td>{{ hourlyData.emoji_code1 }}</td>\n                <td>{{ hourlyData.emoji_code1_count }}</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  </template>\n  <template v-else>\n    <HomeHeader></HomeHeader>\n    <div class=\"stress\">请先注册或登录再使用相关功能</div>\n  </template>\n</template>\n\n<script setup>\nimport { ref } from \"vue\";\nimport axios from \"axios\";\nimport HomeHeader from \"../components/HomeHeader.vue\";\n\n// 当前激活的选项卡\nconst activeTab = ref(\"info\");\nconst hastoken = ref(\"\");\nhastoken.value = !!localStorage.getItem(\"admintoken\");\n\n// 用户信息\nconst userInfo = ref(null);\n\n// 分页用户列表\nconst userList = ref([]);\nconst pagination = ref({\n  pageNum: 1,\n  pageSize: 10,\n  total: 0,\n});\nconst filters = ref({\n  keyword: \"\",\n  createTimeBegin: \"\",\n  createTimeEnd: \"\",\n});\n\n// 表情数量查询\nconst emojiCount = ref(null);\nconst emojiFilters = ref({\n  startTime: \"\",\n  endTime: \"\",\n});\n\n// 表情变化查询\nconst emojiHourlyData = ref(null);\nconst emojiHourlyFilters = ref({\n  startTime: \"\",\n});\n\n// 切换选项卡\nconst switchTab = (tab) => {\n  activeTab.value = tab;\n};\n\n// 获取当前用户信息\nconst fetchUserInfo = async () => {\n  alert(`${localStorage.getItem(\"admintoken\")}`);\n  try {\n    const token = localStorage.getItem(\"admintoken\");\n    const response = await axios.get(\"/api1/admin/user/info/get\", {\n      headers: {\n        // Authorization: `Bearer ${token}`,\n        token: `${token}`,\n      },\n    });\n    if (response.data.code === 200) {\n      userInfo.value = response.data.data;\n    } else {\n      alert(response.data.message || \"获取用户信息失败\");\n    }\n  } catch (error) {\n    alert(\"请求失败，请稍后重试\");\n  }\n};\n\n// 分页查询用户列表\nconst fetchUserList = async () => {\n  try {\n    const token = localStorage.getItem(\"admintoken\");\n    const { pageNum, pageSize } = pagination.value;\n    const { keyword, createTimeBegin, createTimeEnd } = filters.value;\n    const response = await axios.get(\n      `/api1/admin/user/findByPage/${pageNum}/${pageSize}`,\n      {\n        headers: {\n          token: `${token}`,\n        },\n        params: { keyword, createTimeBegin, createTimeEnd },\n      }\n    );\n    if (response.data.code === 200) {\n      alert(`${response.data.data}`);\n      console.log(response.data.data);\n      userList.value = response.data.data;\n      pagination.value.total = response.data.data.length;\n    } else {\n      alert(response.data.message || \"查询用户列表失败\");\n    }\n  } catch (error) {\n    alert(\"请求失败，请稍后重试\");\n  }\n};\n\n// 获取表情数量\nconst fetchEmojiCount = async () => {\n  try {\n    const token = localStorage.getItem(\"admintoken\");\n    const { startTime, endTime } = emojiFilters.value;\n    const response = null;\n    if (startTime === \"\" || endTime === \"\") {\n      response = await axios.get(\"/api1/admin/emoji/count\", {\n        headers: {\n          token: `${token}`,\n        },\n      });\n    } else {\n      response = await axios.get(\"/api1/admin/emoji/count\", {\n        headers: {\n          token: `${token}`,\n        },\n        params: { startTime, endTime },\n      });\n    }\n    if (response.data.code === 200) {\n      emojiCount.value = response.data.data;\n    } else {\n      alert(response.data.message || \"查询表情数量失败\");\n    }\n  } catch (error) {\n    alert(\"请求失败，请稍后重试\");\n  }\n};\n\n// 获取表情变化数据\nconst fetchEmojiHourly = async () => {\n  try {\n    const token = localStorage.getItem(\"admintoken\");\n    const { startTime } = emojiHourlyFilters.value;\n    const response = await axios.get(\"/api1/admin/emoji/hourly\", {\n      headers: {\n        token: `${token}`,\n      },\n      params: { startTime },\n    });\n    if (response.data.code === 200) {\n      emojiHourlyData.value = response.data.data;\n    } else {\n      alert(response.data.message || \"查询表情变化失败\");\n    }\n  } catch (error) {\n    alert(\"请求失败，请稍后重试\");\n  }\n};\n\n// 导出表情数据\nconst exportEmojiData = async () => {\n  try {\n    const token = localStorage.getItem(\"admintoken\");\n    const response = await axios.get(\"/api1/admin/emoji/export\", {\n      headers: {\n        token: `${token}`,\n      },\n      responseType: \"blob\", // 设置响应类型为 blob 用于下载文件\n    });\n    if (response.status === 200) {\n      const blob = new Blob([response.data], {\n        type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\", // 更准确的 Excel MIME 类型\n      });\n      const link = document.createElement(\"a\");\n      link.href = URL.createObjectURL(blob);\n      link.download = \"表情数据.xlsx\"; // 文件名\n      link.click();\n    } else {\n      alert(\"导出失败\");\n    }\n  } catch (error) {\n    alert(\"导出表情数据时出错，请稍后重试\");\n  }\n};\n\n// 改变页码\n// 改变页码\nconst changePage = (newPage) => {\n  if (Number(newPage) < 1) {\n    newPage = 1; // 防止页码小于1\n  }\n  const totalPages = Math.ceil(\n    pagination.value.total / pagination.value.pageSize\n  );\n  if (Number(newPage) > totalPages) {\n    newPage = totalPages; // 防止页码大于最大页数\n  }\n  pagination.value.pageNum = Number(newPage); // 更新页码\n  fetchUserList(); // 重新查询用户列表\n};\n</script>\n\n<style scoped>\n.stress {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  font-size: 24px;\n  color: red;\n}\n.user-management {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: flex-start;\n  height: 100vh;\n  padding: 20px;\n  box-sizing: border-box;\n}\n.menu {\n  margin-bottom: 20px;\n}\n.menu button {\n  padding: 10px 20px;\n  margin-right: 10px;\n  background-color: #4caf50;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n}\n.menu button.active {\n  background-color: #2e7d32;\n}\n.menu button:hover {\n  background-color: #45a049;\n}\n.tab-content {\n  text-align: center;\n  margin-top: 20px;\n}\n\n.tab-content h2 {\n  font-size: 24px;\n  margin-bottom: 20px;\n}\n\n.tab-content button {\n  display: inline-block;\n  margin-top: 10px;\n}\n\n.filters {\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: 15px;\n  margin-bottom: 20px;\n}\n.filters div {\n  display: flex;\n  align-items: center;\n}\n.filters label {\n  margin-right: 10px;\n}\n.filters input {\n  padding: 5px;\n  flex-grow: 1;\n}\n.pagination {\n  margin-top: 10px;\n}\n.pagination button {\n  margin-right: 10px;\n  padding: 5px 10px;\n}\ntable {\n  width: 100%;\n  border-collapse: collapse;\n  margin-top: 10px;\n}\ntable th,\ntable td {\n  border: 1px solid #ddd;\n  padding: 8px;\n  text-align: left;\n}\ntable th {\n  background-color: #f4f4f4;\n}\n.filters label {\n  color: white;\n  font-weight: bold;\n  margin-right: 10px;\n}\n.export-btn {\n  background-color: #007bff;\n  color: white;\n  padding: 10px 20px;\n  margin-left: 10px;\n}\n.export-btn:hover {\n  background-color: #0056b3;\n}\n.id {\n  width: 30px;\n  background-color: #ddd;\n}\n.name {\n  width: 150px;\n  background-color: #ddd;\n}\n.email {\n  width: 250px;\n  background-color: #ddd;\n}\n.phone {\n  width: 150px;\n  background-color: #ddd;\n}\n.time {\n  width: 300px;\n  background-color: #ddd;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}